@model modelo.Tabelas.Compra

<div class="form-horizontal">
    @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
    {
        <div class="alert alert-danger alert-dismissable">
            @Html.ValidationSummary(false, "Verifique os seguintes erros:")
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.DataCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataCompra, new { htmlAttributes = new { @class = "form-control", id= "datepicker" } })
            @Html.ValidationMessageFor(model => model.DataCompra, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProdutoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProdutoId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProdutoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PessoaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PessoaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>